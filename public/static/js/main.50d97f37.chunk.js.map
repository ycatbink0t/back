{"version":3,"sources":["api.ts","components/CommentsTable.tsx","components/Spinner.tsx","components/ModalHelp.tsx","components/Main.tsx","components/SignIn.tsx","components/RouteGuard.tsx","components/SignUp.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["headers","Headers","request","url","method","payload","a","options","body","JSON","stringify","fetch","response","json","signIn","signUp","getComments","logout","useStyles","makeStyles","table","minWidth","CommentsTable","comments","classes","TableContainer","component","Paper","Table","className","TableHead","TableRow","TableCell","align","TableBody","map","comment","key","id","name","surname","Spinner","Grid","container","direction","justify","CircularProgress","theme","modal","margin","marginTop","maxWidth","padding","spacing","ModalHelp","open","onClose","Modal","Typography","variant","WhiteUpdateIcon","styled","UpdateIcon","color","WhiteHelpIcon","HelpIcon","toolbar","display","justifyContent","apikey","marginBottom","Main","children","user","setIsLoggedIn","history","useHistory","useState","setComments","openedModal","setOpenedModal","apiLogOut","push","updateComments","data","useEffect","AppBar","position","Toolbar","IconButton","onClick","undefined","Button","Container","apiKey","paper","flexDirection","alignItems","form","submit","link","palette","primary","light","textDecoration","SignIn","setUser","setLoggedIn","username","setUsername","password","setPassword","errors","setError","handlePassword","handleUsername","e","preventDefault","console","log","error","alert","CssBaseline","elevation","noValidate","onSubmit","TextField","onInput","target","value","helperText","required","fullWidth","label","autoComplete","autoFocus","onChange","type","item","to","PrivateRoute","allowed","redirectTo","rest","SignUp","length","field","message","createMuiTheme","main","dark","secondary","responsiveFontSizes","App","isLoggedIn","me","then","ThemeProvider","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.50d97f37.chunk.js","sourcesContent":["import { User } from './components/SignIn';\r\n\r\nconst headers = new Headers(\r\n    {\"Content-Type\": \"application/json\",\r\n        \"Accept\":\"application/json\"});\r\nconst domain = '';\r\n\r\n\r\ntype httpMethods = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'\r\n\r\nasync function request<T>(url:string, method: httpMethods, payload?: any): Promise<T> {\r\n    const options: RequestInit = {\r\n        body: JSON.stringify(payload),\r\n        headers,\r\n        method,\r\n    };\r\n    const response = await fetch(domain + url, options);\r\n    return await response.json() as T;\r\n}\r\n\r\nexport interface SignInPayload {\r\n    username: string,\r\n    password: string,\r\n}\r\n\r\ninterface SignUpResponse {\r\n    errors?: {\r\n        message: string,\r\n        field: string\r\n    },\r\n    user?: User\r\n}\r\n\r\nexport async function signIn(payload: SignInPayload): Promise<User> {\r\n    return request<User>('/sign-in', 'POST', payload);\r\n}\r\n\r\nexport interface SignUpPayload {\r\n    username: string,\r\n    password: string\r\n}\r\nexport async function signUp(payload: SignUpPayload): Promise<SignUpResponse> {\r\n    return request<SignUpResponse>('/sign-up', 'POST', payload);\r\n}\r\n\r\nexport async function me() {\r\n    return request<User | null>('/me', 'GET');\r\n}\r\n\r\nexport interface Comment {\r\n    id: number,\r\n    name: string,\r\n    surname: string,\r\n    comment: string,\r\n}\r\n\r\nexport async function getComments(): Promise<Comment[]> {\r\n    return request<Comment[]>('/comment', 'GET')\r\n}\r\n\r\nexport async function logout() {\r\n    return request('/logout', 'POST');\r\n}\r\n","import React from 'react';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Comment } from '../api';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\ninterface CommentsTableProps {\r\n    comments: Comment[],\r\n}\r\n\r\nfunction CommentsTable({comments}: CommentsTableProps) {\r\n    const classes = useStyles();\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>ID</TableCell>\r\n                        <TableCell align=\"left\">Name</TableCell>\r\n                        <TableCell align=\"left\">Surname</TableCell>\r\n                        <TableCell align=\"left\">Comment</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {comments.map(comment => (\r\n                        <TableRow key={comment.id}>\r\n                            <TableCell>{comment.id}</TableCell>\r\n                            <TableCell align=\"left\">{comment.name}</TableCell>\r\n                            <TableCell align=\"left\">{comment.surname}</TableCell>\r\n                            <TableCell align=\"left\">{comment.comment}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\n\r\nexport default CommentsTable;\r\n","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nfunction Spinner() {\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\">\r\n            <CircularProgress/>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        margin: 'auto',\r\n        marginTop: '30%',\r\n        maxWidth: '650px',\r\n        padding: theme.spacing(2, 4, 3),\r\n    }\r\n}));\r\n\r\ninterface ModalHelpProps {\r\n    open: boolean,\r\n    onClose: () => any\r\n}\r\n\r\nfunction ModalHelp({open, onClose}: ModalHelpProps) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Modal open={open} onClose={onClose}>\r\n            <Paper className={classes.modal}>\r\n                <Typography align=\"center\" variant=\"h5\">\r\n                    Help\r\n                </Typography>\r\n                <Typography>\r\n                    To add comments into table make POST request to address `/comment` with JSON body:\r\n                    {'{'}\r\n                        apiKey,\r\n                        comment: {'{'}\r\n                            name,\r\n                            surname,\r\n                            comment\r\n                        {'}'}\r\n                    {'}'}\r\n                </Typography>\r\n            </Paper>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalHelp;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport { User } from './SignIn';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport HelpIcon from '@material-ui/icons/Help';\r\n\r\n\r\nimport { Comment, getComments, logout as apiLogOut } from '../api';\r\nimport CommentsTable from './CommentsTable';\r\nimport Spinner from './Spinner';\r\nimport styled from '@material-ui/core/styles/styled';\r\nimport ModalHelp from './ModalHelp';\r\n\r\nconst WhiteUpdateIcon = styled(UpdateIcon)({\r\n    color: '#ffffff',\r\n});\r\nconst WhiteHelpIcon = styled(HelpIcon)({\r\n    color: '#ffffff',\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    toolbar: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    apikey: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nexport interface MainProps {\r\n    user: User,\r\n    setIsLoggedIn: (arg: boolean) => void,\r\n    children?: React.ReactChildren\r\n}\r\n\r\nfunction Main({\r\n                  children,\r\n                  user,\r\n    setIsLoggedIn,\r\n} : MainProps) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [comments, setComments] = useState<Comment[]>();\r\n    const [openedModal, setOpenedModal] = useState<boolean>(false);\r\n\r\n    const noApiKeyProvided = 'No api key provided';\r\n\r\n    async function logout() {\r\n        await apiLogOut();\r\n        setIsLoggedIn(false);\r\n        return history.push('/sign-in');\r\n    }\r\n\r\n    async function updateComments() {\r\n        const data = await getComments();\r\n        setComments(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateComments();\r\n    }, []);\r\n\r\n    function reloadComments() {\r\n        setComments(undefined);\r\n        updateComments();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ModalHelp open={openedModal} onClose={() => setOpenedModal(false)}/>\r\n            <AppBar position=\"static\">\r\n                <Toolbar className={classes.toolbar}>\r\n                    <Typography variant=\"h6\">\r\n                        ElComments\r\n                    </Typography>\r\n                    <div>\r\n                        <IconButton onClick={() => setOpenedModal(true)}>\r\n                            <WhiteHelpIcon/>\r\n                        </IconButton>\r\n                        <IconButton onClick={reloadComments}>\r\n                            <WhiteUpdateIcon/>\r\n                        </IconButton>\r\n                        <Button color=\"inherit\" onClick={logout}>Logout</Button>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Container>\r\n                <Typography variant=\"h6\" align=\"center\" className={classes.apikey}>\r\n                    Your api key: {user?.apiKey || noApiKeyProvided}\r\n                </Typography>\r\n                {comments\r\n                    ? <CommentsTable comments={comments}/>\r\n                    : <Spinner/>\r\n                }\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n","import React, { SyntheticEvent, useState } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { signIn } from '../api';\r\n\r\nexport interface User {\r\n    username: string,\r\n    apiKey: string\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(2),\r\n    },\r\n    form: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    link: {\r\n        color: theme.palette.primary.light,\r\n        textDecoration: 'none',\r\n        \"&:hover, &:focus\": {\r\n            textDecoration: 'underline',\r\n        }\r\n    }\r\n}));\r\n\r\ninterface signInProps {\r\n    setUser: (user: User) => void,\r\n    setLoggedIn: (arg: boolean) => void,\r\n}\r\n\r\nfunction SignIn({setUser, setLoggedIn}: signInProps) {\r\n    const classes = useStyles();\r\n\r\n    const [username, setUsername] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const [errors, setError] = useState<{username?: string | boolean, password?: string | boolean}>({});\r\n\r\n    function handlePassword(password: string): boolean {\r\n        setError({...errors, password: false});\r\n        setPassword(password);\r\n        return false;\r\n    }\r\n\r\n    function handleUsername(username: string): boolean {\r\n        setError({...errors, username: false});\r\n        setUsername(username);\r\n        return false;\r\n    }\r\n\r\n    async function submit(e: SyntheticEvent<HTMLFormElement>) {\r\n        e.preventDefault();\r\n        if (handleUsername(username) || handlePassword(password)) {\r\n            console.log(errors);\r\n            return;\r\n        } else {\r\n            try {\r\n                const user = await signIn({username, password});\r\n                setUser({...user});\r\n                setLoggedIn(true);\r\n            } catch (e) {\r\n                console.error(e);\r\n                alert('Invalid username or password');\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Container maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h5\" align='center'>\r\n                        Sign in\r\n                    </Typography>\r\n                    <form noValidate onSubmit={submit}>\r\n                        <TextField\r\n                            error={!!errors.username}\r\n                            onInput={(e: React.ChangeEvent<HTMLInputElement>) => handleUsername(e.target.value)}\r\n                            helperText={errors.username}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            name=\"username\"\r\n                            autoComplete=\"username\"\r\n                            autoFocus\r\n                        />\r\n                        <TextField\r\n                            error={!!errors.password}\r\n                            onChange={(e: React.ChangeEvent<HTMLInputElement>) => handlePassword(e.target.value)}\r\n                            helperText={errors.password}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                        <Grid container>\r\n                            <Grid item>\r\n                                <RouterLink to='/sign-up' className={classes.link}>\r\n                                        {\"Don't have an account? Sign Up\"}\r\n                                </RouterLink>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Paper>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SignIn;\r\n","import React from 'react';\r\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\r\n\r\nexport interface RouteGuardProps extends RouteProps {\r\n    allowed: boolean,\r\n    redirectTo: string,\r\n    children: React.ReactElement | React.ReactElement[];\r\n}\r\n\r\nfunction PrivateRoute({\r\n                        allowed,\r\n                        redirectTo,\r\n                        children,\r\n                        ...rest}: RouteGuardProps) {\r\n    if (!allowed) {\r\n        return <Redirect to={redirectTo}/>\r\n    } else {\r\n        return <Route {...rest}>\r\n            {children}\r\n        </Route>\r\n    }\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import React, { SyntheticEvent, useState } from 'react';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { signIn, signUp } from '../api';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(2),\r\n    },\r\n    form: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nfunction SignUp() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [username, setUsername] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const [errors, setError] = useState<{username?: string | boolean, password?: string | boolean}>({});\r\n\r\n    function handlePassword(password: string): boolean {\r\n        if (password.length < 8) {\r\n            setError({...errors, password: 'Password should contain at least 8 symbols'});\r\n            return true;\r\n        } else {\r\n            setError({...errors, password: false});\r\n            setPassword(password);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function handleUsername(username: string): boolean {\r\n        if (username.length < 5) {\r\n            setError({...errors, username: 'Username should contain at least 5 symbols'});\r\n            return true;\r\n        } else {\r\n            setError({...errors, username: false});\r\n            setUsername(username);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async function submit(e: SyntheticEvent<HTMLFormElement>) {\r\n        e.preventDefault();\r\n        if (handleUsername(username) || handlePassword(password)) {\r\n            return;\r\n        } else {\r\n            const response = await signUp({username, password});\r\n            if (response.errors) {\r\n                if (response.errors.field === 'password') {\r\n                    setError({...errors, password: response.errors.message})\r\n                }\r\n                if (response.errors.field === 'username') {\r\n                    setError({...errors, username: response.errors.message})\r\n                }\r\n            }\r\n            if (response.user) {\r\n                return history.push('/sign-in');\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h5\" align='center'>\r\n                        Sign up\r\n                    </Typography>\r\n                    <form noValidate onSubmit={submit}>\r\n                        <TextField\r\n                            error={!!errors.username}\r\n                            onInput={(e: React.ChangeEvent<HTMLInputElement>) => handleUsername(e.target.value)}\r\n                            helperText={errors.username}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            name=\"username\"\r\n                            autoComplete=\"username\"\r\n                            autoFocus\r\n                        />\r\n                        <TextField\r\n                            error={!!errors.password}\r\n                            onChange={(e: React.ChangeEvent<HTMLInputElement>) => handlePassword(e.target.value)}\r\n                            helperText={errors.password}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                    </form>\r\n                </Paper>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SignUp;\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from 'react-router-dom'\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\nimport Main from './components/Main';\nimport SignIn, { User } from './components/SignIn';\nimport PrivateRoute from './components/RouteGuard';\nimport { me } from './api';\nimport SignUp from './components/SignUp';\nimport Spinner from './components/Spinner';\n\nlet theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#3d5afe',\n            light: '#8187ff',\n            dark: '#0031ca',\n        },\n        secondary: {\n            main: '#ffeb3b',\n            light: '#ffff72',\n            dark: '#c8b900',\n        },\n    },\n});\ntheme = responsiveFontSizes(theme);\n\nfunction App() {\n    const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\n    const [user, setUser] = useState<User>();\n\n    useEffect(() => {\n        me().then(me => {\n            if (me?.username) {\n                setUser(me);\n                setIsLoggedIn(true);\n            } else {\n                setUser({\n                    username: '',\n                    apiKey: '',\n                });\n            }\n        });\n    }, []);\n\n    return (\n        <ThemeProvider theme={theme}>\n            {user ?\n                <Router>\n                    <Switch>\n                        <PrivateRoute path='/sign-in' allowed={!isLoggedIn} redirectTo='/'>\n                            <SignIn setUser={setUser} setLoggedIn={setIsLoggedIn}/>\n                        </PrivateRoute>\n                        <PrivateRoute allowed={!isLoggedIn} redirectTo='/' path='/sign-up'>\n                            <SignUp/>\n                        </PrivateRoute>\n                        <PrivateRoute allowed={isLoggedIn} redirectTo='/sign-in' path='/'>\n                            <Main user={user} setIsLoggedIn={setIsLoggedIn}/>\n                        </PrivateRoute>\n                    </Switch>\n                </Router> :\n                <Spinner/>\n            }\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}